ccpay:
  postgresql:
    enabled: true
  payment-api:
    enabled: true
  fees-register-api:
    enabled: true
  rpe-service-auth-provider:
    enabled: true
  ccpay-bubble-frontend:
    enabled: true
  ccpay-bulkscanning-api:
    enabled: true
  ccd:
    enabled: false

ccd:
  paymentApi:
    enabled: false
  s2s:
    enabled: false

payment-api:
  java:
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-payment-api"
    secrets:
      PCI_PAL_ACCOUNT_ID_CMC:
        secretRef: pci-pal-account-id-cmc
        key: key
      PCI_PAL_ACCOUNT_ID_PROBATE:
        secretRef: pci-pal-account-id-probate
        key: key
      PCI_PAL_ACCOUNT_ID_DIVORCE:
        secretRef: pci-pal-account-id-divorce
        key: key
      PCI_PAL_API_URL:
        secretRef: pci-pal-api-url
        key: key
      PCI_PAL_API_KEY:
        secretRef: pci-pal-api-key
        key: key
      GOV_PAY_KEYS_PROBATE:
        secretRef: gov-pay-keys-probate
        key: key
      GOV_PAY_KEYS_DIVORCE:
        secretRef: gov-pay-keys-divorce
        key: key
      GOV_PAY_KEYS_CMC:
        secretRef: gov-pay-keys-cmc
        key: key
      GOV_PAY_KEYS_REFERENCE:
        secretRef: gov-pay-keys-reference
        key: key
      LIBERATA_KEYS_OAUTH2_CLIENT_ID:
        secretRef: liberata-keys-oauth2-client-id
        key: key
      LIBERATA_KEYS_OAUTH2_CLIENT_SECRET:
        secretRef: liberata-keys-oauth2-client-secret
        key: key
      LIBERATA_KEYS_OAUTH2_USERNAME:
        secretRef: liberata-keys-oauth2-username
        key: key
      LIBERATA_KEYS_OAUTH2_PASSWORD:
        secretRef: liberata-keys-oauth2-password
        key: key
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://{{ tpl .Values.global.postgresqlHostName $}}:5432/payment"
      SPRING_DATASOURCE_USERNAME: "{{ .Values.global.postgresqlUsername}}"
      SPRING_DATASOURCE_PASSWORD: "{{ .Values.global.postgresqlPassword}}"
      SPRING_LIQUIBASE_ENABLED: true

      SPRING_PROFILES_ACTIVE: "liberataMock,callbackMock,ccdMock"
      #CALLBACK_PAYMENTS_CUTOFF_TIME_IN_MINUTES: 0
      RUN_DB_MIGRATION_ON_STARTUP: 'true'
      S2S_URL: "{{ tpl .Values.global.s2sUrl $}}"

      AUTH_PROVIDER_SERVICE_CLIENT_BASEURL: "{{ tpl .Values.global.s2sUrl $}}"

      AUTH_IDAM_CLIENT_BASEURL: "{{ .Values.global.idamApiUrl }}"
      FEES_REGISTER_URL: "http://{{ .Release.Name }}-fee-register"
      CORE_CASE_DATA_API_URL: "{{ tpl .Values.global.ccdDataStoreApiUrl $}}"
      PCI_PAL_CALLBACK_URL: https://core-api-mgmt-demodata.azure-api.net/telephony-api/telephony/callback

rpe-service-auth-provider:
  java:
    ingressHost: ""
    image: hmctspublic.azurecr.io/rpe/service-auth-provider:latest
    releaseNameOverride: "{{ .Release.Name }}-s2s"
    environment:
      TESTING_SUPPORT_ENABLED: 'true'
      MICROSERVICEKEYS_API_GW: AAAAAAAAAAA
      MICROSERVICEKEYS_CCPAY_BUBBLE: BBBBBBBBBB

fees-register-api:
  java:
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-fee-register"
    environment:
      POSTGRES_HOST: "{{ tpl .Values.global.postgresqlHostName $}}"
      POSTGRES_NAME: "fees-register"
      POSTGRES_USERNAME: "{{ .Values.global.postgresqlUsername}}"
      POSTGRES_PASSWORD: "{{ .Values.global.postgresqlPassword}}"
      POSTGRES_CONNECTION_OPTIONS: "?sslmode=allow"
      SPRING_LIQUIBASE_ENABLED: true
      IDAM_CLIENT_BASE_URL: "{{ .Values.global.idamApiUrl }}"

ccpay-bulkscanning-api:
  java:
    ingressHost: ""
    releaseNameOverride: "{{ .Release.Name }}-bulk-scanning"
    environment:
      AUTH_PROVIDER_SERVICE_CLIENT_BASEURL: "{{ tpl .Values.global.s2sUrl $}}"
      AUTH_IDAM_CLIENT_BASEURL: "{{ .Values.global.idamApiUrl }}"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://{{ tpl .Values.global.postgresqlHostName $}}:5432/bspayment"
      POSTGRES_USERNAME: "{{ .Values.global.postgresqlUsername }}"
      POSTGRES_PASSWORD: "{{ .Values.global.postgresqlPassword }}"

ccpay-bubble-frontend:
  idam-pr:
    redirect_uris:
      paybubble:
        - "{{ .Values.global.bubbleUrl }}/oauth2/callback"
  ccpayfrontend:
    idampr:
      enabled: false
  nodejs:
    ingressHost: ""
    image: hmctspublic.azurecr.io/ccpay/bubble-frontend:latest
    releaseNameOverride: "{{ .Release.Name }}-ccpay-bubble"
    environment:
      APPINSIGHTS_INSTRUMENTATIONKEY:
      CCD_URL: "{{ tpl .Values.global.ccdDataStoreApiUrl $}}"
      CCPAY_BULKSCAN_API_URL: "http://{{ .Release.Name }}-bulk-scanning"
      FEE_JURISDICTION_URL: "http://{{ .Release.Name }}-fee-register/jurisdictions"
      FEE_REGISTRATION_URL: "http://{{ .Release.Name }}-fee-register/fees-register/fees"
      IDAM_API_URL: "{{ .Values.global.idamApiUrl }}"
      IDAM_AUTHENTICATION_WEB_URL: "{{ .Values.global.idamWebUrl }}"
      PAYHUB_API_URL: "http://{{ .Release.Name }}-payment-api"
      S2S_KEY: BBBBBBBBBB
      S2S_URL: "http://{{ .Release.Name }}-s2s"
    secrets:
      IDAM_CLIENT_SECRET:
        secretRef: paybubble-idam-client-secret
        key: key
global:
  devMode: true
  postgresqlUsername: hmcts
  postgresqlPassword: hmcts
  idamApiUrl: ""
  idamWebUrl: ""
  ccdApiGatewayIngress: ""
  ccdCaseManagementWebIngress: ""
  ccdAdminWebIngress: ""
  s2sUrl: "http://{{ .Release.Name }}-s2s"
  postgresqlHostName: "{{ .Release.Name }}-postgresql"
  ccdDataStoreApiUrl: "http://{{ .Release.Name }}-ccd-data-store-api"
postgresql:
  persistence:
    enabled: false
  resources:
    requests:
      cpu: 25m
  initdbScripts:
    init.sql: |-
      CREATE DATABASE "fees-register" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "bspayment" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "data-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "definition-store" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "user-profile" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
      CREATE DATABASE "draftstore" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;

  postgresqlUsername: hmcts
  postgresqlPassword: hmcts
  postgresqlDatabase: payment